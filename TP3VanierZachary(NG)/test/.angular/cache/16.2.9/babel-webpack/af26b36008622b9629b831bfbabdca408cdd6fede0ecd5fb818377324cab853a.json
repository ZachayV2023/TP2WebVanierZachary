{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let VoyageCreateComponent = class VoyageCreateComponent {\n  constructor(voyageService) {\n    this.voyageService = voyageService;\n    this.imagePreview = null;\n  }\n  onSubmit(form) {\n    if (!form.valid) {\n      // Handle invalid form in the UI, perhaps by displaying an error message\n      return;\n    }\n    // Construct a voyage object (adjust fields as necessary for your data model)\n    const voyageData = new FormData();\n    voyageData.append('title', form.value.title);\n    voyageData.append('public', form.value.public ? 'true' : 'false');\n    if (this.imagePreview) {\n      voyageData.append('image', this.imagePreview);\n    }\n    // Call the service to send the data to your backend\n    this.voyageService.createVoyage(voyageData).subscribe({\n      next: response => {\n        // Handle successful response, such as navigating to a new route\n        // or updating a list of voyages displayed to the user\n      },\n      error: error => {\n        // Handle error response, such as displaying an error message\n        console.error('Failed to create voyage', error);\n      }\n    });\n    // Reset the form after submission\n    form.reset();\n    this.imagePreview = null;\n  }\n  onImagePicked(event) {\n    const element = event.target;\n    const file = element.files?.item(0);\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.imagePreview = reader.result; // This should be the file, not the result\n      };\n\n      reader.onerror = error => {\n        // Provide user feedback about the file read error\n        console.error('Error occurred while reading the file', error);\n      };\n      reader.readAsDataURL(file); // Consider if you need to read as data URL or as a File\n    }\n  }\n};\n\nVoyageCreateComponent = __decorate([Component({\n  selector: 'app-voyage-create',\n  templateUrl: './voyage-create.component.html',\n  styleUrls: ['./voyage-create.component.css']\n})], VoyageCreateComponent);","map":{"version":3,"names":["Component","VoyageCreateComponent","constructor","voyageService","imagePreview","onSubmit","form","valid","voyageData","FormData","append","value","title","public","createVoyage","subscribe","next","response","error","console","reset","onImagePicked","event","element","target","file","files","item","reader","FileReader","onload","result","onerror","readAsDataURL","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Zachary\\Desktop\\TP3WebVanierZachary\\TP3VanierZachary(NG)\\test\\src\\app\\voyage-create\\voyage-create.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { VoyageService } from './voyage.service'; // Ensure you have a VoyageService\n\n@Component({\n  selector: 'app-voyage-create',\n  templateUrl: './voyage-create.component.html',\n  styleUrls: ['./voyage-create.component.css']\n})\nexport class VoyageCreateComponent {\n  imagePreview: string | ArrayBuffer | null = null;\n\n  constructor(private voyageService: VoyageService) {}\n\n  onSubmit(form: NgForm): void {\n    if (!form.valid) {\n      // Handle invalid form in the UI, perhaps by displaying an error message\n      return;\n    }\n\n    // Construct a voyage object (adjust fields as necessary for your data model)\n    const voyageData = new FormData();\n    voyageData.append('title', form.value.title);\n    voyageData.append('public', form.value.public as boolean ? 'true' : 'false');\n    if (this.imagePreview) {\n      voyageData.append('image', this.imagePreview);\n    }\n\n    // Call the service to send the data to your backend\n    this.voyageService.createVoyage(voyageData).subscribe({\n      next: (response) => {\n        // Handle successful response, such as navigating to a new route\n        // or updating a list of voyages displayed to the user\n      },\n      error: (error) => {\n        // Handle error response, such as displaying an error message\n        console.error('Failed to create voyage', error);\n      }\n    });\n\n    // Reset the form after submission\n    form.reset();\n    this.imagePreview = null;\n  }\n\n  onImagePicked(event: Event): void {\n    const element = event.target as HTMLInputElement;\n    const file = element.files?.item(0);\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.imagePreview = reader.result; // This should be the file, not the result\n      };\n      reader.onerror = (error) => {\n        // Provide user feedback about the file read error\n        console.error('Error occurred while reading the file', error);\n      };\n      reader.readAsDataURL(file); // Consider if you need to read as data URL or as a File\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AASlC,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAGhCC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAFjC,KAAAC,YAAY,GAAgC,IAAI;EAEG;EAEnDC,QAAQA,CAACC,IAAY;IACnB,IAAI,CAACA,IAAI,CAACC,KAAK,EAAE;MACf;MACA;;IAGF;IACA,MAAMC,UAAU,GAAG,IAAIC,QAAQ,EAAE;IACjCD,UAAU,CAACE,MAAM,CAAC,OAAO,EAAEJ,IAAI,CAACK,KAAK,CAACC,KAAK,CAAC;IAC5CJ,UAAU,CAACE,MAAM,CAAC,QAAQ,EAAEJ,IAAI,CAACK,KAAK,CAACE,MAAiB,GAAG,MAAM,GAAG,OAAO,CAAC;IAC5E,IAAI,IAAI,CAACT,YAAY,EAAE;MACrBI,UAAU,CAACE,MAAM,CAAC,OAAO,EAAE,IAAI,CAACN,YAAY,CAAC;;IAG/C;IACA,IAAI,CAACD,aAAa,CAACW,YAAY,CAACN,UAAU,CAAC,CAACO,SAAS,CAAC;MACpDC,IAAI,EAAGC,QAAQ,IAAI;QACjB;QACA;MAAA,CACD;MACDC,KAAK,EAAGA,KAAK,IAAI;QACf;QACAC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;KACD,CAAC;IAEF;IACAZ,IAAI,CAACc,KAAK,EAAE;IACZ,IAAI,CAAChB,YAAY,GAAG,IAAI;EAC1B;EAEAiB,aAAaA,CAACC,KAAY;IACxB,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAA0B;IAChD,MAAMC,IAAI,GAAGF,OAAO,CAACG,KAAK,EAAEC,IAAI,CAAC,CAAC,CAAC;IACnC,IAAIF,IAAI,EAAE;MACR,MAAMG,MAAM,GAAG,IAAIC,UAAU,EAAE;MAC/BD,MAAM,CAACE,MAAM,GAAG,MAAK;QACnB,IAAI,CAAC1B,YAAY,GAAGwB,MAAM,CAACG,MAAM,CAAC,CAAC;MACrC,CAAC;;MACDH,MAAM,CAACI,OAAO,GAAId,KAAK,IAAI;QACzB;QACAC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D,CAAC;MACDU,MAAM,CAACK,aAAa,CAACR,IAAI,CAAC,CAAC,CAAC;;EAEhC;CACD;;AAnDYxB,qBAAqB,GAAAiC,UAAA,EALjClC,SAAS,CAAC;EACTmC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWpC,qBAAqB,CAmDjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}