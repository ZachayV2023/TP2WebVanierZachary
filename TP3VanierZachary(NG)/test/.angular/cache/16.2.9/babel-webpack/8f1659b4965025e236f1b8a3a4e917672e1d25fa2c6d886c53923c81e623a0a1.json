{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VoyageService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7011/api/Voyages';\n  }\n  createVoyage(voyageData) {\n    const token = localStorage.getItem('token'); // Retrieve the JWT token from local storage\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}` // Set the authorization header\n    });\n    // Make the POST request and handle errors if they occur\n    return this.http.post(this.apiUrl, voyageData, {\n      headers\n    }).pipe(catchError(this.handleError) // Use catchError operator to handle errors\n    );\n  }\n  // Error handling method\n  handleError(error) {\n    if (error.status === 401) {\n      // If the error is a 401 Unauthorized, handle it here\n      console.error('Unauthorized request. Token may be invalid or expired.', error.error);\n    } else {\n      // Handle other types of errors\n      console.error(`Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n  static #_ = this.ɵfac = function VoyageService_Factory(t) {\n    return new (t || VoyageService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: VoyageService,\n    factory: VoyageService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","throwError","catchError","VoyageService","constructor","http","apiUrl","createVoyage","voyageData","token","localStorage","getItem","headers","post","pipe","handleError","error","status","console","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Zachary\\Desktop\\TP3WebVanierZachary\\TP3VanierZachary(NG)\\test\\src\\app\\voyage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VoyageService {\n  private apiUrl = 'https://localhost:7011/api/Voyages';\n\n  constructor(private http: HttpClient) { }\n\n  createVoyage(voyageData: FormData): Observable<any> {\n    const token = localStorage.getItem('token'); // Retrieve the JWT token from local storage\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}` // Set the authorization header\n    });\n\n    // Make the POST request and handle errors if they occur\n    return this.http.post(this.apiUrl, voyageData, { headers }).pipe(\n      catchError(this.handleError) // Use catchError operator to handle errors\n    );\n  }\n\n  // Error handling method\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 401) {\n      // If the error is a 401 Unauthorized, handle it here\n      console.error('Unauthorized request. Token may be invalid or expired.', error.error);\n    } else {\n      // Handle other types of errors\n      console.error(`Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAA2B,sBAAsB;AACjF,SAAqBC,UAAU,QAAQ,MAAM;AAC7C,SAASC,UAAU,QAAQ,gBAAgB;;;AAK3C,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,oCAAoC;EAEb;EAExCC,YAAYA,CAACC,UAAoB;IAC/B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC7C,MAAMC,OAAO,GAAG,IAAIZ,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUS,KAAK,EAAE,CAAC;KACpC,CAAC;IAEF;IACA,OAAO,IAAI,CAACJ,IAAI,CAACQ,IAAI,CAAC,IAAI,CAACP,MAAM,EAAEE,UAAU,EAAE;MAAEI;IAAO,CAAE,CAAC,CAACE,IAAI,CAC9DZ,UAAU,CAAC,IAAI,CAACa,WAAW,CAAC,CAAC;KAC9B;EACH;EAEA;EACQA,WAAWA,CAACC,KAAwB;IAC1C,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;MACxB;MACAC,OAAO,CAACF,KAAK,CAAC,wDAAwD,EAAEA,KAAK,CAACA,KAAK,CAAC;KACrF,MAAM;MACL;MACAE,OAAO,CAACF,KAAK,CAAC,yBAAyBA,KAAK,CAACC,MAAM,cAAc,EAAED,KAAK,CAACA,KAAK,CAAC;;IAEjF;IACA,OAAOf,UAAU,CAAC,iDAAiD,CAAC;EACtE;EAAC,QAAAkB,CAAA,G;qBA5BUhB,aAAa,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbrB,aAAa;IAAAsB,OAAA,EAAbtB,aAAa,CAAAuB,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}