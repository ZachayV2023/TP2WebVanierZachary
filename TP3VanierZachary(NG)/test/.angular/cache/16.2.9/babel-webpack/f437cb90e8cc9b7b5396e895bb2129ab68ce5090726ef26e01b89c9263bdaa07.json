{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7011/api/Account';\n    this.isLoggedInSubject = new BehaviorSubject(this.hasToken());\n  }\n  get isLoggedIn$() {\n    return this.isLoggedInSubject.asObservable();\n  }\n  login(username, password) {\n    return this.http.post(`${this.apiUrl}/Login`, {\n      UserName: username,\n      Password: password\n    }).pipe(tap(res => {\n      if (res && res.token) {\n        localStorage.setItem('token', res.token);\n        this.isLoggedInSubject.next(true);\n      }\n    }));\n  }\n  register(registerData) {\n    return this.http.post(`${this.apiUrl}/Register`, registerData);\n  }\n  logout() {\n    localStorage.removeItem('token');\n    this.isLoggedInSubject.next(false);\n  }\n  hasToken() {\n    return !!localStorage.getItem('token');\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","tap","AuthService","constructor","http","apiUrl","isLoggedInSubject","hasToken","isLoggedIn$","asObservable","login","username","password","post","UserName","Password","pipe","res","token","localStorage","setItem","next","register","registerData","logout","removeItem","getItem","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Zachary\\Desktop\\TP3WebVanierZachary\\TP3VanierZachary(NG)\\test\\src\\app\\auth.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\ninterface LoginResponse {\r\n  token: string;\r\n}\r\n\r\ninterface RegisterData {\r\n  UserName: string;\r\n  Email: string;\r\n  Password: string;\r\n  ConfirmPassword: string;\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n  private apiUrl = 'https://localhost:7011/api/Account';\r\n  private isLoggedInSubject = new BehaviorSubject<boolean>(this.hasToken());\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  get isLoggedIn$(): Observable<boolean> {\r\n    return this.isLoggedInSubject.asObservable();\r\n  }\r\n\r\n  login(username: string, password: string): Observable<LoginResponse> {\r\n    return this.http.post<LoginResponse>(`${this.apiUrl}/Login`, { UserName: username, Password: password })\r\n      .pipe(\r\n        tap(res => {\r\n          if (res && res.token) {\r\n            localStorage.setItem('token', res.token);\r\n            this.isLoggedInSubject.next(true);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  register(registerData: RegisterData): Observable<any> {\r\n    return this.http.post<any>(`${this.apiUrl}/Register`, registerData);\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('token');\r\n    this.isLoggedInSubject.next(false);\r\n  }\r\n\r\n  private hasToken(): boolean {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,eAAe,QAAoB,MAAM;AAClD,SAASC,GAAG,QAAQ,gBAAgB;;;AAcpC,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAHhB,KAAAC,MAAM,GAAG,oCAAoC;IAC7C,KAAAC,iBAAiB,GAAG,IAAIN,eAAe,CAAU,IAAI,CAACO,QAAQ,EAAE,CAAC;EAEjC;EAExC,IAAIC,WAAWA,CAAA;IACb,OAAO,IAAI,CAACF,iBAAiB,CAACG,YAAY,EAAE;EAC9C;EAEAC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAgB,GAAG,IAAI,CAACR,MAAM,QAAQ,EAAE;MAAES,QAAQ,EAAEH,QAAQ;MAAEI,QAAQ,EAAEH;IAAQ,CAAE,CAAC,CACrGI,IAAI,CACHf,GAAG,CAACgB,GAAG,IAAG;MACR,IAAIA,GAAG,IAAIA,GAAG,CAACC,KAAK,EAAE;QACpBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACC,KAAK,CAAC;QACxC,IAAI,CAACZ,iBAAiB,CAACe,IAAI,CAAC,IAAI,CAAC;;IAErC,CAAC,CAAC,CACH;EACL;EAEAC,QAAQA,CAACC,YAA0B;IACjC,OAAO,IAAI,CAACnB,IAAI,CAACS,IAAI,CAAM,GAAG,IAAI,CAACR,MAAM,WAAW,EAAEkB,YAAY,CAAC;EACrE;EAEAC,MAAMA,CAAA;IACJL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAACnB,iBAAiB,CAACe,IAAI,CAAC,KAAK,CAAC;EACpC;EAEQd,QAAQA,CAAA;IACd,OAAO,CAAC,CAACY,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;EACxC;EAAC,QAAAC,CAAA,G;qBAjCUzB,WAAW,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAX9B,WAAW;IAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;IAAAC,UAAA,EADE;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}