{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.username = '';\n    this.email = '';\n    this.password = '';\n    this.confirmPassword = '';\n  }\n  register() {\n    if (this.password === this.confirmPassword) {\n      this.authService.register(this.username, this.email, this.password).subscribe(data => {\n        // Handle successful registration here\n        console.log('Registration successful', data);\n      }, error => {\n        // Handle error here\n        console.error('Registration failed', error);\n      });\n    } else {\n      // Handle password mismatch\n      console.error('Passwords do not match');\n    }\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":{"version":3,"names":["Component","RegisterComponent","constructor","authService","username","email","password","confirmPassword","register","subscribe","data","console","log","error","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Zachary\\Desktop\\TP3WebVanierZachary\\TP3VanierZachary(NG)\\test\\src\\app\\register\\register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n  username: string = '';\r\n  email: string = '';\r\n  password: string = '';\r\n  confirmPassword: string = '';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  register() {\r\n    if (this.password === this.confirmPassword) {\r\n      this.authService.register(this.username, this.email, this.password).subscribe(\r\n        data => {\r\n          // Handle successful registration here\r\n          console.log('Registration successful', data);\r\n        },\r\n        error => {\r\n          // Handle error here\r\n          console.error('Registration failed', error);\r\n        }\r\n      );\r\n    } else {\r\n      // Handle password mismatch\r\n      console.error('Passwords do not match');\r\n    }\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAM5BC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;IAL/B,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,eAAe,GAAW,EAAE;EAEmB;EAE/CC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACF,QAAQ,KAAK,IAAI,CAACC,eAAe,EAAE;MAC1C,IAAI,CAACJ,WAAW,CAACK,QAAQ,CAAC,IAAI,CAACJ,QAAQ,EAAE,IAAI,CAACC,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACG,SAAS,CAC3EC,IAAI,IAAG;QACL;QACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,IAAI,CAAC;MAC9C,CAAC,EACDG,KAAK,IAAG;QACN;QACAF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C,CAAC,CACF;KACF,MAAM;MACL;MACAF,OAAO,CAACE,KAAK,CAAC,wBAAwB,CAAC;;EAE3C;CACD;AAzBYZ,iBAAiB,GAAAa,UAAA,EAL7Bd,SAAS,CAAC;EACTe,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWhB,iBAAiB,CAyB7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}