{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { throwError, Subject, tap } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VoyageService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7011/api/Voyages';\n    this.voyageUpdated = new Subject(); // Subject to broadcast updates\n    this.voyages = []; // Store the voyages\n  }\n  // Method to fetch existing voyages from the database\n  getAllVoyages() {\n    return this.http.get(this.apiUrl).pipe(tap(voyages => {\n      this.voyages = voyages;\n      this.voyageUpdated.next([...this.voyages]);\n    }), catchError(this.handleError));\n  }\n  createVoyage(voyageData) {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.post(this.apiUrl, voyageData, {\n      headers\n    }).pipe(catchError(this.handleError), tap(newVoyage => {\n      this.voyages.push(newVoyage);\n      this.voyageUpdated.next([...this.voyages]);\n    }));\n  }\n  deleteVoyage(voyageId) {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.delete(`${this.apiUrl}/${voyageId}`, {\n      headers\n    }).pipe(catchError(this.handleError));\n  }\n  getVoyageUpdateListener() {\n    return this.voyageUpdated.asObservable();\n  }\n  // Error handling method\n  handleError(error) {\n    if (error.status === 401) {\n      // If the error is a 401 Unauthorized, handle it here\n      console.error('Unauthorized request. Token may be invalid or expired.', error.error);\n    } else {\n      // Handle other types of errors\n      console.error(`Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n  static #_ = this.ɵfac = function VoyageService_Factory(t) {\n    return new (t || VoyageService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: VoyageService,\n    factory: VoyageService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","throwError","Subject","tap","catchError","VoyageService","constructor","http","apiUrl","voyageUpdated","voyages","getAllVoyages","get","pipe","next","handleError","createVoyage","voyageData","token","localStorage","getItem","headers","post","newVoyage","push","deleteVoyage","voyageId","delete","getVoyageUpdateListener","asObservable","error","status","console","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Zachary\\Desktop\\TP3WebVanierZachary\\TP3VanierZachary(NG)\\test\\src\\app\\voyage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, Subject, tap } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VoyageService {\n  private apiUrl = 'https://localhost:7011/api/Voyages';\n  private voyageUpdated = new Subject<any[]>(); // Subject to broadcast updates\n  private voyages: any[] = []; // Store the voyages\n\n  constructor(private http: HttpClient) { }\n\n  // Method to fetch existing voyages from the database\n  getAllVoyages(): Observable<any[]> {\n    return this.http.get<any[]>(this.apiUrl).pipe(\n      tap((voyages) => {\n        this.voyages = voyages;\n        this.voyageUpdated.next([...this.voyages]);\n      }),\n      catchError(this.handleError)\n    );\n  }\n\n  createVoyage(voyageData: FormData): Observable<any> {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n\n    return this.http.post(this.apiUrl, voyageData, { headers }).pipe(\n      catchError(this.handleError),\n      tap((newVoyage) => {\n        this.voyages.push(newVoyage);\n        this.voyageUpdated.next([...this.voyages]);\n      })\n    );\n  }\n\n  deleteVoyage(voyageId: number): Observable<any> {\n    const token = localStorage.getItem('token');\n    const headers = new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n    return this.http.delete(`${this.apiUrl}/${voyageId}`, { headers }).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  getVoyageUpdateListener(): Observable<any[]> {\n    return this.voyageUpdated.asObservable();\n  }\n\n  // Error handling method\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 401) {\n      // If the error is a 401 Unauthorized, handle it here\n      console.error('Unauthorized request. Token may be invalid or expired.', error.error);\n    } else {\n      // Handle other types of errors\n      console.error(`Backend returned code ${error.status}, body was: `, error.error);\n    }\n    // Return an observable with a user-facing error message\n    return throwError('Something bad happened; please try again later.');\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAA2B,sBAAsB;AACjF,SAAqBC,UAAU,EAAEC,OAAO,EAAEC,GAAG,QAAQ,MAAM;AAC3D,SAASC,UAAU,QAAQ,gBAAgB;;;AAK3C,OAAM,MAAOC,aAAa;EAKxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAJhB,KAAAC,MAAM,GAAG,oCAAoC;IAC7C,KAAAC,aAAa,GAAG,IAAIP,OAAO,EAAS,CAAC,CAAC;IACtC,KAAAQ,OAAO,GAAU,EAAE,CAAC,CAAC;EAEW;EAExC;EACAC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAQ,IAAI,CAACJ,MAAM,CAAC,CAACK,IAAI,CAC3CV,GAAG,CAAEO,OAAO,IAAI;MACd,IAAI,CAACA,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACD,aAAa,CAACK,IAAI,CAAC,CAAC,GAAG,IAAI,CAACJ,OAAO,CAAC,CAAC;IAC5C,CAAC,CAAC,EACFN,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,CAC7B;EACH;EAEAC,YAAYA,CAACC,UAAoB;IAC/B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,OAAO,GAAG,IAAIrB,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUkB,KAAK;KACjC,CAAC;IAEF,OAAO,IAAI,CAACX,IAAI,CAACe,IAAI,CAAC,IAAI,CAACd,MAAM,EAAES,UAAU,EAAE;MAAEI;IAAO,CAAE,CAAC,CAACR,IAAI,CAC9DT,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,EAC5BZ,GAAG,CAAEoB,SAAS,IAAI;MAChB,IAAI,CAACb,OAAO,CAACc,IAAI,CAACD,SAAS,CAAC;MAC5B,IAAI,CAACd,aAAa,CAACK,IAAI,CAAC,CAAC,GAAG,IAAI,CAACJ,OAAO,CAAC,CAAC;IAC5C,CAAC,CAAC,CACH;EACH;EAEAe,YAAYA,CAACC,QAAgB;IAC3B,MAAMR,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,OAAO,GAAG,IAAIrB,WAAW,CAAC;MAC9B,eAAe,EAAE,UAAUkB,KAAK;KACjC,CAAC;IACF,OAAO,IAAI,CAACX,IAAI,CAACoB,MAAM,CAAC,GAAG,IAAI,CAACnB,MAAM,IAAIkB,QAAQ,EAAE,EAAE;MAAEL;IAAO,CAAE,CAAC,CAACR,IAAI,CACrET,UAAU,CAAC,IAAI,CAACW,WAAW,CAAC,CAC7B;EACH;EAEAa,uBAAuBA,CAAA;IACrB,OAAO,IAAI,CAACnB,aAAa,CAACoB,YAAY,EAAE;EAC1C;EAEA;EACQd,WAAWA,CAACe,KAAwB;IAC1C,IAAIA,KAAK,CAACC,MAAM,KAAK,GAAG,EAAE;MACxB;MACAC,OAAO,CAACF,KAAK,CAAC,wDAAwD,EAAEA,KAAK,CAACA,KAAK,CAAC;KACrF,MAAM;MACL;MACAE,OAAO,CAACF,KAAK,CAAC,yBAAyBA,KAAK,CAACC,MAAM,cAAc,EAAED,KAAK,CAACA,KAAK,CAAC;;IAEjF;IACA,OAAO7B,UAAU,CAAC,iDAAiD,CAAC;EACtE;EAAC,QAAAgC,CAAA,G;qBA1DU5B,aAAa,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAbjC,aAAa;IAAAkC,OAAA,EAAblC,aAAa,CAAAmC,IAAA;IAAAC,UAAA,EAFZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}