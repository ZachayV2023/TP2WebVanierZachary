{"ast":null,"code":"import { take, map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nexport class AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(route, state) {\n    return this.authService.isLoggedIn$.pipe(take(1), map(isLoggedIn => {\n      if (isLoggedIn && (state.url === '/login' || state.url === '/register')) {\n        this.router.navigate(['/dashboard']); // Adjust as per your default route\n        return false;\n      } else if (!isLoggedIn && state.url !== '/login' && state.url !== '/register') {\n        this.router.navigate(['/login']);\n        return false;\n      }\n      return true;\n    }));\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["take","map","AuthGuard","constructor","authService","router","canActivate","route","state","isLoggedIn$","pipe","isLoggedIn","url","navigate","_","i0","ɵɵinject","i1","AuthService","i2","Router","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Zachary\\Desktop\\TP3WebVanierZachary\\TP3VanierZachary(NG)\\test\\src\\app\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { AuthService } from './auth.service';\nimport { take, map } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n    return this.authService.isLoggedIn$.pipe(\n      take(1),\n      map(isLoggedIn => {\n        if (isLoggedIn && (state.url === '/login' || state.url === '/register')) {\n          this.router.navigate(['/dashboard']); // Adjust as per your default route\n          return false;\n        } else if (!isLoggedIn && state.url !== '/login' && state.url !== '/register') {\n          this.router.navigate(['/login']);\n          return false;\n        }\n        return true;\n      })\n    );\n  }\n}\n"],"mappings":"AAGA,SAASA,IAAI,EAAEC,GAAG,QAAQ,gBAAgB;;;;AAG1C,OAAM,MAAOC,SAAS;EACpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CAACC,KAA6B,EAAEC,KAA0B;IACnE,OAAO,IAAI,CAACJ,WAAW,CAACK,WAAW,CAACC,IAAI,CACtCV,IAAI,CAAC,CAAC,CAAC,EACPC,GAAG,CAACU,UAAU,IAAG;MACf,IAAIA,UAAU,KAAKH,KAAK,CAACI,GAAG,KAAK,QAAQ,IAAIJ,KAAK,CAACI,GAAG,KAAK,WAAW,CAAC,EAAE;QACvE,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;QACtC,OAAO,KAAK;OACb,MAAM,IAAI,CAACF,UAAU,IAAIH,KAAK,CAACI,GAAG,KAAK,QAAQ,IAAIJ,KAAK,CAACI,GAAG,KAAK,WAAW,EAAE;QAC7E,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAChC,OAAO,KAAK;;MAEd,OAAO,IAAI;IACb,CAAC,CAAC,CACH;EACH;EAAC,QAAAC,CAAA,G;qBAjBUZ,SAAS,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATnB,SAAS;IAAAoB,OAAA,EAATpB,SAAS,CAAAqB,IAAA;IAAAC,UAAA,EADI;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}