{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class AuthInterceptor {\n  intercept(request, next) {\n    const authToken = localStorage.getItem('authToken');\n    const authReq = authToken ? request.clone({\n      headers: new HttpHeaders({\n        'Authorization': `Bearer ${authToken}`\n      })\n    }) : request;\n    return next.handle(authReq);\n  }\n  static #_ = this.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n}","map":{"version":3,"names":["HttpHeaders","AuthInterceptor","intercept","request","next","authToken","localStorage","getItem","authReq","clone","headers","handle","_","_2","factory","ɵfac"],"sources":["C:\\Users\\Zachary\\Desktop\\TP3WebVanierZachary\\TP3VanierZachary(NG)\\test\\src\\app\\auth.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHeaders\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const authToken = localStorage.getItem('authToken');\r\n    const authReq = authToken ? request.clone({\r\n      headers: new HttpHeaders({\r\n        'Authorization': `Bearer ${authToken}`\r\n      })\r\n    }) : request;\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n"],"mappings":"AACA,SAKEA,WAAW,QACN,sBAAsB;;AAI7B,OAAM,MAAOC,eAAe;EAE1BC,SAASA,CAACC,OAAyB,EAAEC,IAAiB;IACpD,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,MAAMC,OAAO,GAAGH,SAAS,GAAGF,OAAO,CAACM,KAAK,CAAC;MACxCC,OAAO,EAAE,IAAIV,WAAW,CAAC;QACvB,eAAe,EAAE,UAAUK,SAAS;OACrC;KACF,CAAC,GAAGF,OAAO;IACZ,OAAOC,IAAI,CAACO,MAAM,CAACH,OAAO,CAAC;EAC7B;EAAC,QAAAI,CAAA,G;qBAVUX,eAAe;EAAA;EAAA,QAAAY,EAAA,G;WAAfZ,eAAe;IAAAa,OAAA,EAAfb,eAAe,CAAAc;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}