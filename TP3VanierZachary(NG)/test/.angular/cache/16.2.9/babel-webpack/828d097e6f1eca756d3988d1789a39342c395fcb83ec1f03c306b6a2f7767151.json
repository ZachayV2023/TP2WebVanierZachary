{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:5177/api/Auth'; // Update with your actual backend URL\n  }\n\n  register(username, email, password) {\n    return this.http.post(`${this.baseUrl}/register`, {\n      username,\n      email,\n      password\n    });\n  }\n  login(username, password) {\n    return this.http.post(`${this.baseUrl}/login`, {\n      username,\n      password\n    });\n  }\n  static #_ = this.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["AuthService","constructor","http","baseUrl","register","username","email","password","post","login","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\2037408\\Desktop\\TP3WebVanierZachary\\TP3VanierZachary(NG)\\test\\src\\app\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private baseUrl = 'http://localhost:5177/api/Auth'; // Update with your actual backend URL\n\n  constructor(private http: HttpClient) { }\n\n  register(username: string, email: string, password: string): Observable<any> {\n    return this.http.post(`${this.baseUrl}/register`, { username, email, password });\n  }\n\n  login(username: string, password: string): Observable<any> {\n    return this.http.post(`${this.baseUrl}/login`, { username, password });\n  }\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,gCAAgC,CAAC,CAAC;EAEZ;;EAExCC,QAAQA,CAACC,QAAgB,EAAEC,KAAa,EAAEC,QAAgB;IACxD,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,WAAW,EAAE;MAAEE,QAAQ;MAAEC,KAAK;MAAEC;IAAQ,CAAE,CAAC;EAClF;EAEAE,KAAKA,CAACJ,QAAgB,EAAEE,QAAgB;IACtC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,QAAQ,EAAE;MAAEE,QAAQ;MAAEE;IAAQ,CAAE,CAAC;EACxE;EAAC,QAAAG,CAAA,G;qBAXUV,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXf,WAAW;IAAAgB,OAAA,EAAXhB,WAAW,CAAAiB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}