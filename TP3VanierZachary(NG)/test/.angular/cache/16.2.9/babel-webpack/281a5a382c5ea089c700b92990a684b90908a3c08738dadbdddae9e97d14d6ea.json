{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class RegisterComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.username = '';\n    this.email = '';\n    this.password = '';\n    this.confirmPassword = '';\n  }\n  register() {\n    // Log the data being sent to the server\n    console.log('Attempting to register with', {\n      username: this.username,\n      email: this.email,\n      password: this.password,\n      confirmPassword: this.confirmPassword\n    });\n    if (this.password === this.confirmPassword) {\n      // Make sure the structure of the data here matches your API's expected request body\n      const registerData = {\n        UserName: this.username,\n        Email: this.email,\n        Password: this.password,\n        PasswordConfirm: this.confirmPassword\n      };\n      this.authService.register(registerData).subscribe(response => {\n        console.log('Registration successful', response); // Log the successful response\n        // TODO: Handle successful registration here\n      }, error => {\n        console.error('Registration failed', error.error); // Log the detailed error response\n        // TODO: Handle error here, like showing an error message to the user\n      });\n    } else {\n      console.error('Passwords do not match'); // Log password mismatch error\n      // TODO: Inform the user that the passwords do not match\n    }\n  }\n  static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    decls: 24,\n    vars: 4,\n    consts: [[1, \"register-container\"], [3, \"submit\"], [1, \"form-group\"], [\"for\", \"username\"], [\"type\", \"text\", \"id\", \"username\", \"name\", \"username\", \"placeholder\", \"Choose a username\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"placeholder\", \"Enter your email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Create a password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"confirm-password\"], [\"type\", \"password\", \"id\", \"confirm-password\", \"name\", \"confirmPassword\", \"placeholder\", \"Confirm your password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"routerLink\", \"/login\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 1);\n        i0.ɵɵlistener(\"submit\", function RegisterComponent_Template_form_submit_3_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n        i0.ɵɵtext(6, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n        i0.ɵɵtext(10, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Confirm Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_19_listener($event) {\n          return ctx.confirmPassword = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵtext(21, \"Register\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"a\", 12);\n        i0.ɵɵtext(23, \"Already have an account? Login\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.email);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.confirmPassword);\n      }\n    },\n    dependencies: [i2.RouterLink, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n    styles: [\".register-container[_ngcontent-%COMP%] {\\n    background-color: #333;\\n    color: #fff;\\n    max-width: 400px;\\n    margin: 50px auto;\\n    padding: 20px;\\n    border-radius: 8px;\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n}\\n\\n.register-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-bottom: 20px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 15px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n    display: block;\\n    margin-bottom: 5px;\\n}\\n\\n.form-group[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    border: none;\\n    border-radius: 4px;\\n    background-color: #555;\\n    color: white;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    border: none;\\n    border-radius: 4px;\\n    background-color: #4CAF50;\\n    color: white;\\n    cursor: pointer;\\n    font-size: 16px;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n    background-color: #45a049;\\n}\\n\\na[_ngcontent-%COMP%] {\\n    color: #ddd;\\n    text-decoration: none;\\n    display: inline-block;\\n    margin-top: 15px;\\n}\\n\\na[_ngcontent-%COMP%]:hover {\\n    color: #fff;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcmVnaXN0ZXIvcmVnaXN0ZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQixhQUFhO0lBQ2Isa0JBQWtCO0lBQ2xCLHdDQUF3QztBQUM1Qzs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxtQkFBbUI7QUFDdkI7O0FBRUE7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGFBQWE7SUFDYixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHNCQUFzQjtJQUN0QixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksV0FBVztJQUNYLGFBQWE7SUFDYixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osZUFBZTtJQUNmLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSxXQUFXO0lBQ1gscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxXQUFXO0FBQ2YiLCJzb3VyY2VzQ29udGVudCI6WyIucmVnaXN0ZXItY29udGFpbmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzM7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIG1heC13aWR0aDogNDAwcHg7XHJcbiAgICBtYXJnaW46IDUwcHggYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG59XHJcblxyXG4ucmVnaXN0ZXItY29udGFpbmVyIGgyIHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5mb3JtLWdyb3VwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbi5mb3JtLWdyb3VwIGxhYmVsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG59XHJcblxyXG4uZm9ybS1ncm91cCBpbnB1dCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNTU1O1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDtcclxuICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGZvbnQtc2l6ZTogMTZweDtcclxufVxyXG5cclxuYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XHJcbn1cclxuXHJcbmEge1xyXG4gICAgY29sb3I6ICNkZGQ7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG59XHJcblxyXG5hOmhvdmVyIHtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["RegisterComponent","constructor","authService","username","email","password","confirmPassword","register","console","log","registerData","UserName","Email","Password","PasswordConfirm","subscribe","response","error","_","i0","ɵɵdirectiveInject","i1","AuthService","_2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_form_submit_3_listener","RegisterComponent_Template_input_ngModelChange_7_listener","$event","RegisterComponent_Template_input_ngModelChange_11_listener","RegisterComponent_Template_input_ngModelChange_15_listener","RegisterComponent_Template_input_ngModelChange_19_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\Zachary\\Desktop\\TP3WebVanierZachary\\TP3VanierZachary(NG)\\test\\src\\app\\register\\register.component.ts","C:\\Users\\Zachary\\Desktop\\TP3WebVanierZachary\\TP3VanierZachary(NG)\\test\\src\\app\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '../auth.service';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent {\r\n  username: string = '';\r\n  email: string = '';\r\n  password: string = '';\r\n  confirmPassword: string = '';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  register(): void {\r\n    // Log the data being sent to the server\r\n    console.log('Attempting to register with', {\r\n      username: this.username,\r\n      email: this.email,\r\n      password: this.password,\r\n      confirmPassword: this.confirmPassword\r\n    });\r\n\r\n    if (this.password === this.confirmPassword) {\r\n      // Make sure the structure of the data here matches your API's expected request body\r\n      const registerData = {\r\n        UserName: this.username,\r\n        Email: this.email,\r\n        Password: this.password,\r\n        PasswordConfirm: this.confirmPassword\r\n      };\r\n\r\n      this.authService.register(registerData).subscribe(\r\n        response => {\r\n          console.log('Registration successful', response); // Log the successful response\r\n          // TODO: Handle successful registration here\r\n        },\r\n        (error: HttpErrorResponse) => {\r\n          console.error('Registration failed', error.error); // Log the detailed error response\r\n          // TODO: Handle error here, like showing an error message to the user\r\n        }\r\n      );\r\n    } else {\r\n      console.error('Passwords do not match'); // Log password mismatch error\r\n      // TODO: Inform the user that the passwords do not match\r\n    }\r\n  }\r\n}\r\n","<div class=\"register-container\">\r\n    <h2>Register</h2>\r\n    <form (submit)=\"register()\">\r\n        <div class=\"form-group\">\r\n            <label for=\"username\">Username</label>\r\n            <input type=\"text\" id=\"username\" [(ngModel)]=\"username\" name=\"username\" placeholder=\"Choose a username\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"email\">Email</label>\r\n            <input type=\"email\" id=\"email\" [(ngModel)]=\"email\" name=\"email\" placeholder=\"Enter your email\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"password\" id=\"password\" [(ngModel)]=\"password\" name=\"password\" placeholder=\"Create a password\" required>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"confirm-password\">Confirm Password</label>\r\n            <input type=\"password\" id=\"confirm-password\" [(ngModel)]=\"confirmPassword\" name=\"confirmPassword\" placeholder=\"Confirm your password\" required>\r\n        </div>\r\n        <button type=\"submit\">Register</button>\r\n    </form>\r\n    <a routerLink=\"/login\">Already have an account? Login</a>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}